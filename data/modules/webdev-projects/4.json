{
    "type": "project",
    "pages": [
        {
            "type": "information",
            "title": "Project Overview",
            "elements": [
                {
                    "type": "text",
                    "content": "➔ Create mad libs, rock-paper-scissors, and  tic-tac-toe with JavaScript"
                },
                {
                    "type": "text",
                    "content": "➔ Learn how to create interactive programs"
                },
                {
                    "type": "text",
                    "content": "➔ Learn how to utilize the console"
                },
                {
                    "type": "text",
                    "content": "➔ Use global Javascript variables in functions"
                }
            ]
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]Initialize global variables.[[/]]"
                },
                {
                    "type": "code",
                    "content": "var coinFlipScore = 0;\nvar rockPaperScissorScore = 0;"
                },
                {
                    "type": "text",
                    "content": "Increment global variables by one every time the user wins."
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]Functions[[/]]"
                },
                {
                    "type": "text",
                    "content": "Each of the games will be start when their respective functions are called."
                },
                {
                    "type": "code",
                    "content": "function madLibs(adj, nouni, verb, noun2) {}\nfunction coinFlip(userChoice) {} \nfunction rockPaperScissors(userChoice) {}"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]madLibs function[[/]]"
                },
                {
                    "type": "text",
                    "content": "Use string concentration to insert variables into a string"
                },
                {
                    "type": "code",
                    "content": "function madLibs(adj, nounl, verb, noun2) {\n    console.log(`The ${adj} ${nounl} ${verb} over the ${noun2}.`);\n} "
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function[[/]]"
                },
                {
                    "type": "text",
                    "content": "➔ Convert the user’s choice to lowercase."
                },
                {
                    "type": "text",
                    "content": "➔ Validate user’s choice by checking if it’s “rock”, “paper”, or “scissors”."
                },
                {
                    "type": "text",
                    "content": "➔ Use return statement to exit function and return [[`]]undefined[[`]]."
                },
                {
                    "type": "code",
                    "content": "function rockPaperScissors(userChoice) {\n  userChoice = userChoice.toLowerCase();\n  if(![\"rock\", \"paper\", \"scissors\"].includes(userChoice)) {\n    return console.log( \"Invalid option. Must be \\\"rock\\\", \\\"paper\\\", or \\\"scissors\\\".\");\n  }\n  // continued on next page \n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]"
                },
                {
                    "type": "text",
                    "content": "➔ Randomize coin flip"
                },
                {
                    "type": "code",
                    "content": "var randomNumber = Math.floor(Math.random() * 3);\nvar computerChoice; \nif (randomNumber === 2) {\n  computerChoice = \"rock\"; \n} else if (randomNumber === 1) {\n  computerChoice = \"paper\"; \n} else {\n  computerChoice = \"scissors\";\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]"
                },
                {
                    "type": "text",
                    "content": "➔ Check remaining possible combinations of choices."
                },
                {
                    "type": "text",
                    "content": "[[ ]][[ ]]◆ If user choice is rock and the computer’s is paper, than the computer wins."
                },
                {
                    "type": "text",
                    "content": "[[ ]][[ ]]◆ Else, user wins."
                },
                {
                    "type": "code",
                    "content": "else if (userChoice === \"rock\") {\n  if (computerChoice === \"paper\") {\n    winner = \"computer\";\n  } else {\n    winner = \"user\";\n    rockPaperScissorsScore++\n  }\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]"
                },
                {
                    "type": "text",
                    "content": "➔ Check remaining possible combinations of choices."
                },
                {
                    "type": "text",
                    "content": "[[ ]][[ ]]◆ If user choice is paper and the computer’s is scissor, than the computer wins."
                },
                {
                    "type": "text",
                    "content": "[[ ]][[ ]]◆ Else, user wins."
                },
                {
                    "type": "code",
                    "content": "else if (userChoice === \"paper\") {\n  if (computerChoice === \"scissors\") {\n    winner = \"computer\";\n  } else {\n    winner = \"user\";\n    rockPaperScissorsScore++\n  }\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]"
                },
                {
                    "type": "text",
                    "content": "➔ Check remaining possible combinations of choices."
                },
                {
                    "type": "text",
                    "content": "[[ ]][[ ]]◆ If user choice is scissors and the computer’s is rock, than the computer wins."
                },
                {
                    "type": "text",
                    "content": "[[ ]][[ ]]◆ Else, user wins."
                },
                {
                    "type": "code",
                    "content": "else if (userChoice === \"scissors\") {\n  if (computerChoice === \"rock\") {\n    winner = \"computer\";\n  } else {\n    winner = \"user\";\n    rockPaperScissorsScore++\n  }\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]"
                },
                {
                    "type": "text",
                    "content": "➔ Return statement"
                },
                {
                    "type": "code",
                    "content": "console.log(`The user chose ${userChoice}, and the computer chose ${computerChoice}, so the winner is the ${winner ?? \"no one\"} and your score is ${rockPaperScissorScore}`)",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-4-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]coinFlip function [[/]]"
                },
                {
                    "type": "text",
                    "content": "➔ Convert user’s choice to lower case."
                },
                {
                    "type": "text",
                    "content": "➔ Check that it’s “heads” or tails”. If not, use return statement to exit the function and return undefined."
                },
                {
                    "type": "text",
                    "content": "➔ Generate random number."
                },
                {
                    "type": "text",
                    "content": "➔ Use number to choose “heads” or “tails”."
                },
                {
                    "type": "text",
                    "content": "➔ Compare the user’s and computer’s choice and determine winner."
                },
                {
                    "type": "text",
                    "content": "➔ Return statement"
                },
                {
                    "type": "code",
                    "content": "function coinFlip(userChoice) {\n  userChoice = userChoice.toLowerCase();\n  if (![\"heads\", \"tails\"].includes(userChoice)) {\n    return console.log( \"Invalid option. Must be 'heads' or 'tails'\");\n  }\n  var winner;\n  var computerChoice = Math.floor(Math.random() * 2) === 0 ? \"heads\" : \"tails\";\n  if (userChoice === computerChoice) {\n    winner = \"user\";\n    coinFlipScore++;\n  } else {\n    winner = \"computer\";\n  }\n  console.log(`The user chose ${userChoice}, and the computer chose ${computerChoice}, so the winner is ${winner} and your score is ${coinFlipScore}`)\n}"
                }
            ],
            "hints": [],
            "validation": [
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-4-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "madLibs(\"happy\", \"dog\", \"jump\", \"moon\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "The happy dog jump over the moon.",
                            "runwhen": "immediately",
                            "filters": [
                                "trim"
                            ],
                            "onerror": "Uh oh! The Mad Libs function didn't work. We expected the sentence to be 'The happy dog jump over the moon.'"
                        }
                    ]
                },
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-4-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "madLibs(\"sad\", \"monkey\", \"cried\", \"eggs\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "The sad monkey cried over the eggs.",
                            "runwhen": "immediately",
                            "filters": [
                                "trim"
                            ],
                            "onerror": "The Mad Libs function didn't work. We expected the sentence to be 'The sad monkey cried over the eggs.'"
                        }
                    ]
                },
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-4-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "coinFlip(\"heads\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "object",
                            "runwhen": "immediately",
                            "filters": [
                                "typeof"
                            ],
                            "onerror": "We expected a string to be logged when run! Instead, we got a {{output}}"
                        }
                    ]
                },
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-4-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "rockPaperScissors(\"rock\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "",
                            "runwhen": "immediately",
                            "reject": true,
                            "matches": [
                                {"type": "regex", "value": "Error: ", "filters": ["toString"]},
                                {"type": "startsWith", "value": "Uncaught", "filters": ["toString"]}
                            ],
                            "onerror": "An error was thrown!"
                        }
                    ]
                }
            ],
            "points": 0,
            "coins": 0
        }
    ]
}