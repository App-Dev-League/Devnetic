{
	"type": "lesson",
	"pages":
	[
		{
			"type": "information",
			"title": "Week 4 - HTML Recap",
			"elements":
			[
				{
					"type": "text",
					"content": "Front end is functionality on the side of the client (HTML/CSS/JS). HTML stands for Hyper Text Markup Language. It is used to design the layout of text and structure of a webpage."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/0-0.png",
					"width": "40%"
				},
				{
					"type": "text",
					"content": "Headings define the header of a section or page. For example, [[monospace]]<h1>[[/]] creates a large heading. "
				},
				{
					"type": "text",
					"content": "Paragraphs add bodies of text, and are created with the [[monospace]]<p>[[/]] tag."
				},
				{
					"type": "text",
					"content": "Image dags display images on webpages from URLs or local files."
				},
				{
					"type": "text",
					"content": "Hyperlinks are clickable lines of text to add in a website to redirect the user to another page or website"
				}
			]
		},
		{
			"type": "information",
			"title": "Week 4 - CSS Recap",
			"elements":
			[
				{
					"type": "text",
					"content": "CSS makes websites look nice by changing style, location, and more of elements. CSS stands for \"Cascading Syle Sheets\". CSS does not add any new content to the page."
				},
				{
					"type": "text",
					"content": "Some common CSS styles include:"
				},
				{
					"type": "text",
					"content": "  - font-family: Change the font of an element."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/1-0.png",
					"width": "30%"
				},
				{
					"type": "text",
					"content": "  - font-size: Change the size of an element."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/1-1.png",
					"width": "20%"
				},
				{
					"type": "text",
					"content": "  - text-align: Center, left or right align text."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/1-2.png",
					"width": "16%"
				},
				{
					"type": "text",
					"content": "  - color: Change the color of text."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/1-3.png",
					"width": "45%"
				},
				{
					"type": "text",
					"content": "  - text-decoration: Add underlines, strikethroughs and other decorations."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/1-4.png",
					"width": "30%"
				},
				{
					"type": "text",
					"content": "  - Draw borders around elements."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/1-5.png",
					"width": "45%"
				},
				{
					"type": "text",
					"content": "Selector events activate CSS on an event, such as a hover."
				},
				{
					"type": "code",
					"content": "#div:hover {} /* Activate CSS inside {} when #div is hovered on */"
				},
				{
					"type": "text",
					"content": "Animation transitions apply smoother transitions to elements"
				},
				{
					"type": "code",
					"content": "transition: 1s all; /* 1s transition to all styles */\ntransition: 1s color; /* transition: 1s color */\ntransition: 1s color, 3s border /* Multiple transition rules */"
				}
			]
		},
		{
			"type": "information",
			"title": "Week 4 - Bootstrap Recap",
			"elements":
			[
				{
					"type": "text",
					"content": "Bootstrap is a CSS framework that makes the creation of layouts simpler for developers. It comes with pre-built classes so you don't have to write your own CSS."
				},
				{
					"type": "image",
					"src": "/data/modules/webdev-assets/img5/2-0.png"
				}
			]
		},
		{
			"type": "information",
			"title": "Week 4 - JavaScript Recap",
			"elements": [
				{
					"type": "text",
					"content": "Purpose of JavaScript:"
				},
				{
					"type": "text",
					"content": "  - Full stack development (client-side execution + server-side scripting)"
				},
				{
					"type": "text",
					"content": "  - Creating animations, graphics, pop-ups, interactive material, etc."
				},
				{
					"type": "text",
					"content": "Console:"
				},
				{
					"type": "text",
					"content": "  - A message/output window display for developers"
				},
				{
					"type": "text",
					"content": "  - Can be used for debugging and shows error/security/network messages"
				},
				{
					"type": "text",
					"content": "Comments:"
				},
				{
					"type": "code",
					"content": "// this is a single line comment\n/*\nThis\nis\nmulti-line\n*/"
				},
				{
					"type": "text",
					"content": "Variables and constants:"
				},
				{
					"type": "code",
					"content": "let temperature; // scoped\nvar day; // global\nconst x = 0 // constant"
				},
				{
					"type": "text",
					"content": "JS is loosely typed/dynamic - variables be assigned to any type. The primitive types are string, number, bigint, boolean, undefined, symbol, and null."
				},
				{
					"type": "text",
					"content": "JavaScript properties are data contained by the instance of an object or type. They can be accessed using the dot operator (.) and the property name."
				},
				{
					"type": "code",
					"content": "let word = 'hello';\nconsole.log(word.length); // length is a property of strings\nconsole.log(word.toLowerCase()); // function toLowerCase is a property of strings"
				},
				{
					"type": "text",
					"content": "JavaScript conditionals execute code blocks if specified conditions are met. If, else, else if, and switch statements are all conditionals."
				},
				{
					"type": "code",
					"content": "let grade = 89;\nconst passingGrade = 86;\nif (grade >= passingGrade) {\n  console.log('pass');\n} else {\n  console.log('fail')\n}"
				},
				{
					"type": "text",
					"content": "Functions define reusable blocks of code. Instead of repeating code for the same actions, functions are used for the same results."
				},
				{
					"type": "code",
					"content": "function passOrFail(grade) {\n  let grade = 89;\n  const passingGrade = 86;\n  if (grade >= passingGrade) {\n    console.log('pass');\n  } else {\n    console.log('fail')\n  }\n}"
				},
				{
					"type": "text",
					"content": "The DOM provides functionality for editing, retrieving, and detecting events in the HTML document."
				},
				{
					"type": "code",
					"content": "document.getElementById('name'); // access element with ID\ndocument.getElementById('name').innerHTML; // set element content with innerHTML property\ndocument.write('content'); // outputs directly on the HTML docuemtn (NOTE: it will overwrite the document if it has fully loaded)\ndocument.getElementsByTagName('h2'); // access elements of a tag\ndocument.getElementsByClassName('pop-up'); // get elements of a class\ndocument.getElementById('name').src = 'img.png'; // set the src attribute of the element\ndocument.getElementById('profit').innerHTML = calculateProfit(); // dynamic HTML contents"
				}
			]
		},
		{
			"title": "Project Setup",
			"type": "information",
			"elements": [
				{
					"type": "text",
					"content": "Link stylesheets using [[monospace]]<link rel=”stylesheet” href=”style.css”>[[/]] in the head section of the HTML file."
				},
				{
					"type": "text",
					"content": "  - [[monospace]]rel[[/]] attribute is required: specifies the relationship between the linked document and the current document"
				},
				{
					"type": "text",
					"content": "  - [[monospace]]href[[/]] attribute contains the url of the linked document"
				},
				{
					"type": "text",
					"content": "[[monospace]]type[[/]] attribute specifies the media type of the linked document"
				},
				{
					"type": "text",
					"content": "Multiple stylesheets can be linked, but many websites use a single sheet to avoid rewriting code and for faster load time (choose what is best for your project)"
				},
				{
					"type": "text",
					"content": "JavaScript functionality can be added with the script tag (either external or embedded)"
				},
				{
					"type": "code",
					"content": "<script src=”script.js”></script> <!--External-->\n<script>document.write('content');</script> <!--Internal-->"
				},
				{
					"type": "text",
					"content": "If you plan to use libraries such as JQuery, Bootstrap, etc., you can add their JS files from a CDN before your other scripts in the HTML file."
				}
			]
		}
	]
}