var stack=[],allFuncs=[],volatileRegs=["rcx","rdx","r8","r9"],strLiteralSection="",currentFunc="";function initGenerate(e){var t=e[0],a=e[1];allFuncs=findAllFuncs(a[0].body);var r=findFunctionNames(a[0].body),n=(includeHeaders(t),generateDataSection(t)),u=generateTextHeader(e[1])+r+n;return console.log(u),0}function findAllFuncs(e){var t=0;for(allFuncs=[];t<e.length;)allFuncs.push(e[t].name),t++;return allFuncs}function generateFunctionAssembly(e,t){var a=0,r="";if(1===e.length&&0===t.length||(r+=initStack()),0!==t.length)for(var n=0,u=0;u<t.length;u++)"int"===t[u].type&&(r+="\tpush %"+volatileRegs[n]+"\n",stack.push({type:"LocalVariable",name:t[u].name,value:volatileRegs[n],variableType:"int"}),n++);for(;a<e.length;){var l=e[a];if("Statement"===l.type)r+=checkForStatements(l.value);else"if"===l.type?r+=checkForIfs(l):"Call"===l.type&&(r+=generateCall(l));0!==a&&a===e.length-1&&(clearStack(),restoreRBP()),a++}return r}function generateStrLiteralSection(){return"\t.section\t__TEXT,__cstring,cstring_literals\n"}function initStack(){return"\tmov %rsp,%rbp\n",saveRBP(),"\tpush %rbp\n\tmov %rsp,%rbp\n"}function saveRBP(){stack.push({type:"SavedRBP",name:"",value:"rbp",variableType:""})}function restoreRBP(){stack.pop()}function addRestoreRBPAsm(){return"\tpop %rbp\n"}function findFunctionNames(e){for(var t="",a=0;a<e.length;a++)currentFunc=e[a].name,"main"===e[a].name?(t+="\t.globl\tmain\n\n",t+="main:\n"):(t+="\t.globl\t_"+e[a].name+"\n\n",t+="_"+e[a].name+":\n"),t+=generateFunctionAssembly(e[a].body,e[a].args);return t}function generateTextHeader(){return"\t.text\n"}function generateDataSection(e){var t=findGlobalVariables(e);return generateDataHeader()+generateDataBody(t)}function generateDataHeader(){return"\t.data\n"}function generateDataBody(e){for(var t="",a=0;a<e.length;a++)t+="\t.globl\t_"+e[a].name+"\n",t+="_"+e[a].name+":\n","int"===e[a].type&&(t+="\t.long\t"+e[a].value+"\n\n");return t}function findGlobalVariables(e){for(var t=[],a=0;a<e.length&&"GlobalStatements"!==e[a].type;)a++;for(var r=e[a].body,n=0;n<r.length;n++)if("Statement"===r[n].type){a=0;for(var u=r[n].value;a<u.length-1;)"Word"===u[a].type&&-1===keywords.indexOf(u[a].value)&&"Equal"===u[a+1].type&&t.push({type:u[a-1].value,name:u[a].value,value:u[a+2].value}),a++}return t}function reverseOffset(e){return Math.abs(stack.length-1-e)}function findOnTheStack(e){for(var t=0;t<stack.length;t++)if(stack[t].name===e)return t;return-1}function generateReturn(e){var t="";if("NumberLiteral"===e.type)"0"===e.value?t+="\txor %rax,%rax\n":t+="\tmov $"+e.value+",%rax\n";else if("Word"===e.type&&!isAKeyword(e.value)&&(stackEntry=findOnTheStack(e.value),-1!==stackEntry))switch(stackOffset=reverseOffset(stackEntry),stack[stackEntry].variableType){case"int":0!==stackOffset?t+="\tmov "+8*stackOffset+"(%rsp), %rax\n":t+="\tmov (%rsp), %rax\n"}return t+=addClearStackAsm(),t+=addRestoreRBPAsm(),t+="\tret\n\n"}function addClearStackAsm(){for(var e=0,t=0;t<stack.length;t++)"LocalVariable"===stack[t].type&&e++;return"\tadd $"+(8*e).toString()+",%rsp\n"}function clearStack(){for(var e=[],t=0;t<stack.length;t++)"LocalVariable"===stack[t].type&&e.push(t);for(;0!==e.length;)stack.splice(e[e.length-1],1),e.pop()}function generateIncByOne(e){return 0===e?"\tincl (%rsp)\n":"\tincl "+(8*e).toString()+"(%rsp)\n"}function generateIfClause(e,t,a){var r="";return r+=0===e?"\tcmp $"+t+",(%rsp)\n":"\tcmp $"+t+","+(8*parseInt(e)).toString()+"(%rsp)\n",r+="\tjne _if"+a+t+"_after\n"}function generateIfInside(e,t,a){for(var r=0,n="",u=stack.length;r<e.length;){var l=e[r];if("Statement"===l.type)n+=checkForStatements(l.value);r++}if(u<stack.length){for(var s=0;u<stack.length;)stack.pop(),s++,u++;n+="\tadd $"+(8*s).toString()+",%rsp\n"}return n+="\n"}function isAKeyword(e){return-1!==keywords.indexOf(e)}function checkForStatements(e){var t="";if("Word"===e[0].type&&isAKeyword(e[0].value))"return"===e[0].value&&(t+=generateReturn(e[1]),1),"int"===e[0].value&&(5===e.length?t+=generateVariableAssignment(e[0].value,e[1].value,e[3]):e.length>5&&(t+=generateVariableAssignmentWithAddition(e))),"char"===e[0].value&&6===e.length&&generateStringVariable(e);else if("Word"===e[0].type&&!isAKeyword(e[0].value))for(var a=0;a<stack.length;a++)"LocalVariable"===stack[a].type&&stack[a].name===e[0].value&&"IncByOne"===e[1].type&&(t+=generateIncByOne(reverseOffset(a)));return t}function checkForIfs(e){var t="";if(3===e.condition.length){var a=e.condition;if("ComparisonE"===a[1].type&&"Word"===a[0].type&&"NumberLiteral"===a[2].type)for(var r=0;r<stack.length;r++)"LocalVariable"===stack[r].type&&stack[r].name===a[0].value&&(t+=generateIfClause(reverseOffset(r),a[2].value,a[0].value),t+=generateIfInside(e.body,a[0].value,a[2].value),t+="_if"+a[0].value+a[2].value+"_after:\n")}return t}function generateCall(e){if(callAsm="",-1!==allFuncs.indexOf(e.callee)){for(var t=e.params,a=0,r=0;a<t.length;)"Delimiter"!==t[a].type?"NumberLiteral"!==t[a].type?a++:(callAsm+="\tmov $"+t[a].value+",%"+volatileRegs[r]+"\n",r++,a++):a++;callAsm+="\tcall _"+e.callee+"\n"}return callAsm}function generateStringVariable(e){if("Word"===e[1].type&&"Arr"===e[2].type){for(var t=0;t<stack.length;t++)if("LocalVariable"===stack[t].type&&stack[t].name===e[1].value)throw new TypeError("Varibale already defined: "+e[1].value);0===e[2].value.length&&"StringLiteral"===e[4].type&&(strLiteralSection+="\nL_"+currentFunc+"_"+e[1].value+":\n",strLiteralSection+='\t.ascii\t"'+escapeThis(e[4].value)+'"\n')}}function escapeThis(e){return e.replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}function generateVariableAssignment(e,t,a){if(assignmentAsm="","NumberLiteral"===a.type)"int"===e&&(assignmentAsm+="\tpush $"+a.value+"\n",stack.push({type:"LocalVariable",name:t,value:a.value,variableType:e}));else if("Word"===a.type&&"int"===e)for(var r=0;r<stack.length;r++)"LocalVariable"===stack[r].type&&stack[r].name===a.value&&(r!==stack.length?assignmentAsm+="\tmov "+(8*reverseOffset(r)).toString()+"(%rsp),%rax\n":assignmentAsm+="\tmov (%rsp),%rax\n",assignmentAsm+="\tpush %rax\n",stack.push({type:"LocalVariable",name:t,value:stack[r].value,variableType:e}));return assignmentAsm}function generateVariableAssignmentWithAddition(e){var t=0,a=0,r=0,n="";for(n="\txor %rax,%rax\n";t<e.length;){if("Equal"===e[t].type){e[t-1].value;var u=0;for(u="Minus"===e[t+1].type?t+3:t+2;"Plus"===e[u].type||"Minus"===e[u].type;)"NumberLiteral"===e[u-1].type&&"NumberLiteral"===e[u+1].type&&(0===a&&("Minus"===e[t+1].type?(r-=parseInt(e[u-1].value),n+="\tsub $"+e[u-1].value+",%rax\n"):(r+=parseInt(e[u-1].value),n+="\tadd $"+e[u-1].value+",%rax\n")),"Plus"===e[u].type?(r+=parseInt(e[t+1].value),n+="\tadd $"+e[u+1].value+",%rax\n"):"Minus"===e[u].type&&(r-=parseInt(e[t+1].value),n+="\tsub $"+e[u+1].value+",%rax\n"),a++),u+=2}t++}return 0!==a?(n+="\tpush %rax\n",stack.push({type:"LocalVariable",name:e[1].value,value:r,variableType:"int"}),n):"Error!"}function includeHeaders(e){for(var t=0,a=e[0];t<a.length;)"Macro"===a[t].type&&"include"===a[t].subtype&&(console.log("In the near future, included flies from the C standard library will be added!"),console.log("But we first need to fully compile every valid C syntax!")),t++;return[]}function parser(e){var t=0;function a(){var r=e[t];if("equal"===r.type)return"equal"==e[++t].type?(++t,{type:"ComparisonE",value:r.value+r.value}):{type:"Equal",value:r.value};if("star"===r.type)return t++,{type:"Pointer",value:r.value};if("hash"===r.type)return t++,{type:"Macro",value:r.value};if("not"===r.type)return"equal"===e[++t].type?(++t,{type:"ComaprisonN",value:r.value+"="}):{type:"Not",value:r.value};if("plus"===r.type)return"equal"===e[++t].type?(++t,{type:"IncByNum",value:"+="}):"plus"===e[t].type?(++t,{type:"IncByOne",value:"++"}):{type:"Plus",value:"+"};if("minus"===r.type)return"minus"===e[++t].type?(t++,{type:"DecByOne",value:"--"}):"equal"===e[t].type?(t++,{type:"DecByNum",value:"-="}):"greater"===e[t].type?(t++,{type:"Arrow",value:"->"}):{type:"Minus",value:r.value};if("name"===r.type)return t++,{type:"Word",value:r.value};if("question"===r.type)return t++,{type:"Question",value:r.value};if("less"===r.type)return"equal"===e[++t].type?(t++,{type:"LessOrEqual",value:"<="}):{type:"Less",value:r.value};if("and"===r.type)return"and"===e[++t].type?(t++,{type:"AndAnd",value:"&&"}):{type:"And",value:r.value};if("pipe"===r.type)return"pipe"===e[++t].type?(t++,{type:"OrOr",value:"||"}):{type:"Pipe",value:r.value};if("greater"===r.type)return"equal"===e[++t].type?(t++,{type:"GreaterOrEqual",value:">="}):{type:"Greater",value:r.value};if("caret"===r.type)return"equal"===e[++t].type?(t++,{type:"XorEqual",value:"^="}):{type:"Xor",value:r.value};if("comma"===r.type)return t++,{type:"Delimiter",value:r.value};if("colon"===r.type)return t++,{type:"Colon",value:r.value};if("backslash"===r.type){if("name"===(r=e[++t]).type){if("t"===r.value)return t++,{type:"Tab",value:/\t/};if("n"===r.value)return t++,{type:"Newline",value:/\n/};if("r"===r.value)return t++,{type:"CRet",value:/\r/};if("b"===r.value)return t++,{type:"Backspace",value:/\b/};if("a"===r.value)return t++,{type:"Alert",value:/\a/};if("v"===r.value)return t++,{type:"VTab",value:/\v/};if("x"===r.value)return t++,{type:"Hex",value:/\x/};if("o"===r.value)return t++,{type:"Oct",value:/\o/}}if("question"===r.type)return t++,{type:"QueMark",value:/\?/}}if("bracket"===r.type&&"["===r.value){r=e[++t];for(var n={type:"Arr",params:[]};"bracket"!==r.type||"bracket"===r.type&&"]"!==r.value;)n.params.push(a()),r=e[t];return t++,n}if("curly"===r.type&&"{"===r.value){r=e[++t];for(n={type:"CodeDomain",params:[]};"curly"!==r.type||"curly"===r.type&&"}"!==r.value;)n.params.push(a()),r=e[t];return t++,n}if("semi"===r.type)return t++,{type:"Terminator",value:r.value};if("dot"===r.type)return t++,{type:"Dot",value:r.value};if("number"===r.type)return t++,{type:"NumberLiteral",value:r.value};if("string"===r.type)return t++,{type:"StringLiteral",value:r.value};if("forwardslash"===r.type)return t++,{type:"ForwardSlash",value:r.value};if("paren"===r.type&&"("===r.value){r=e[++t];let u=e[t-2];if(void 0!==u&&"name"===u.type)n={type:"CodeCave",name:u.value,params:[]};else n={type:"CodeCave",params:[]};for(;"paren"!==r.type||"paren"===r.type&&")"!==r.value;)n.params.push(a()),r=e[t];return t++,n}throw new TypeError(r.type)}let r={type:"Program",body:[]};for(;t<e.length;)r.body.push(a());return r}function processor(e){var t=e.body,a=[],r=findGlobalStatements(t);r=preprocessor(r),a.push({type:"GlobalStatements",body:r});for(var n=[],u=findFuncs(t),l=0;l<u.length;l++){var s=processBody(u[l].body);u[l].body=s;var o=updateFunctionArguments(u[l].args);u[l].args=o}n.push({type:"Functions",body:u});var i=[];return i.push(a,n),i}function findGlobalStatements(e){for(var t=e,a=0,r=[];a<t.length;){if("Macro"===t[0].type){var n=[];if("include"===t[1].value){var u=[],l=0;if("StringLiteral"===t[2].type){u.push(t[0]),u.push(t[1]),u.push(t[2]);for(var s=0;s<3;s++)t.shift()}else{for(;"Greater"!==t[l].type;)u.push(t[l]),l++;u.push(t[l]);for(s=0;s<l+1;s++)t.shift()}r.push({type:"Macro",value:u}),a=0}}if("Terminator"===t[a].type){for(n=[],s=0;s<a+1;s++)if("struct"===t[s].value){var o=processBody(t[s+2].expression.arguments);r.push({type:"struct",name:t[a+1].value,body:o}),s+=4}else n.push(t[s]);for(s=0;s<a+1;s++)t.shift();0!==n.length&&r.push({type:"Statement",value:n}),a=0}a++}return r}function findFuncs(e){for(var t=[],a=0;a<e.length;a++)"Function"===e[a].type&&e[a].expression.hasOwnProperty("callee")&&"Identifier"===e[a].expression.callee.type&&"Word"===e[a-1].type&&"Word"===e[a-2].type&&"Function"===e[a+1].type&&"CodeDomain"===e[a+1].expression.type&&("main"===e[a].expression.callee.name?t.push({type:"EntryPoint",name:e[a].expression.callee.name,returnType:e[a-2].value,args:e[a].expression.arguments,body:e[a+1].expression.arguments}):t.push({type:"FunctionDefinition",name:e[a].expression.callee.name,returnType:e[a-2].value,args:e[a].expression.arguments,body:e[a+1].expression.arguments}));return t}function processBody(e){for(var t=[],a=0,r=0;a<e.length;){var n=e[a];if("CodeCave"!==n.type||"Terminator"!==e[a+1].type||"Word"!==e[a-1].type){if("CodeDomain"===n.type&&"CodeCave"===e[a-1].type){if("Word"!==e[a-2].type)throw new TypeError("Invalid Syntax!");if("if"===e[a-2].value){if(!(a-3>=0)){u=processBody(n.arguments);t.push({type:"if",condition:e[a-1].arguments,body:u}),a++;continue}if("Word"!==e[a-3].type){var u=processBody(n.arguments);t.push({type:"if",condition:e[a-1].arguments,body:u}),a++;continue}if("else"===e[a-3].value){processBody(n.arguments);t.push({type:"elseif",condition:e[a-1].arguments,body:u}),a++;continue}}else{if("while"===e[a-2].value){var l=processBody(n.arguments);t.push({type:"while",condition:e[a-1].arguments,body:l}),a++;continue}if("for"===e[a-2].value){var s=processBody(n.arguments);t.push({type:"for",condition:e[a-1].arguments,body:s}),a++;continue}if("switch"===e[a-2].value){var o=0,i=[],p=e[a].arguments;p.reverse();for(var y=[];o<p.length;){if("Colon"!==p[o].type)y.push(p[o]);else{var c=p[o+1].type,v=p[o+1].value,f=y.reverse();"default"===p[o+1].value?o++:"case"===p[o+2].value&&(o+=2),y=[];var d=processBody(f);i.push({caseType:c,caseValue:v,caseStatements:d})}o++}t.push({type:"switch",condition:e[a-1].arguments,body:i}),a++;continue}}}else{if("CodeDomain"===n.type&&"else"===e[a-1].value){var h=processBody(n.arguments);t.push({type:"else",body:h}),a++;continue}if("CodeDomain"===n.type&&"do"===e[a-1].value){if("Word"!==e[a+1].type||"while"!==e[a+1].value)throw new TypeError("Invalid Syntax!");if("CodeCave"===e[a+2].type){var m=processBody(n.arguments);t.push({type:"do",condition:e[a+2].arguments,body:m}),a++;continue}}else if("CodeDomain"===n.type&&"Word"===e[a-1].type&&"struct"===e[a-2].value&&"Terminator"===e[a+1].type){var g=processBody(n.arguments);t.push({type:"struct",name:e[a-1].value,body:g}),a++;continue}}if("Terminator"===n.type){var b=[];if("CodeCave"===e[a-1].type&&"while"===e[a-2].value){a++;continue}if("CodeDomain"===e[a-1].type&&"struct"===e[a-3].value){a++;continue}for(;r<=a;){if("Word"===e[r].type){if("if"===e[r].value||"for"===e[r].value||"switch"===e[r].value||"while"===e[r].value){r+=3;continue}if("do"===e[r].value){r+=5;continue}if("else"===e[r].value&&"CodeDomain"===e[r+1].type){r+=2;continue}if("struct"===e[r].value){for(;"Terminator"!==e[r].type;)r++;if("Terminator"===e[r].type){r++;break}}}b.push({type:e[r].type,value:e[r].value}),r++}t.push({type:"Statement",value:b})}if(a===e.length-1&&"Terminator"!==n.type&&"CodeDomain"!==n.type)throw new TypeError("Error in function definition: Function must return something\n or end with a ; \n or if this fucntion doesn't return anything\n you screwed up somewhere!");a++}else t.push({type:"Call",params:n.arguments,callee:n.callee.name}),a++}return t}function updateFunctionArguments(e){for(var t=0,a=[],r=0;t<e.length;)if("Delimiter"!==e[t].type)if(t!==e.length-1)t++;else{if(t-r==2){if("Word"!==e[t-1].type||"Word"!==e[t].type)throw new TypeError("Error in function definition: Invalid arguments!");a.push({type:e[t-1].value,name:e[t].value}),r+=t}t++}else{if(t-r==2){if("Word"!==e[t-2].type||"Word"!==e[t-1].type)throw new TypeError("Error in function definition: Invalid arguments!");a.push({type:e[t-2].value,name:e[t-1].value}),r+=t}t++}return a}function preprocessor(e){for(var t=0;t<e.length;){if("Macro"===e[t].type){var a=e[t].value;if("Word"===a[1].type){if("include"===a[1].value){for(var r=0,n="";r<a.length;){if("Less"===a[r].type)for(r++;r<a.length&&"Greater"!==a[r].type;)n+=a[r].value,r++;"StringLiteral"===a[r].type&&(n+=a[r].value),r++}e[t]={type:"Macro",subtype:"include",file:n}}"define"===a[1].value&&console.log("define macro not yet supported :("),"ifndef"===a[1].value&&console.log("define macro not yet supported :("),"ifdef"===a[1].value&&console.log("define macro not yet supported :("),"pragma"===a[1].value&&console.log("pragma macro not yet supported :(")}}t++}return e}function tokenizer(e){for(var t=0,a=[],r=/[a-zA-Z]/,n=/\n/,u=/\\/,l=/\s/,s=/[0-9]/;t<e.length;){var o=e[t];if("="!==o)if("*"!==o)if("#"!==o)if("!"!==o)if("["!==o&&"]"!==o)if("-"!==o)if("+"!==o)if("/"!==o)if(u.test(o))a.push({type:"backslash",value:"\\"}),t++;else if("?"!==o)if("<"!==o)if(">"!==o)if("|"!==o)if("&"!==o)if("%"!==o)if("$"!==o)if("@"!==o)if("^"!==o)if("~"!==o)if("`"!==o)if("("!==o&&")"!==o)if(":"!==o)if("."!==o)if(","!==o)if(";"!==o)if("{"!==o&&"}"!==o)if(l.test(o)||n.test(o))t++;else if(s.test(o)){for(var i="";s.test(o);)i+=o,o=e[++t];a.push({type:"number",value:i})}else if(r.test(o)||"_"===o){i=o;if(++t<e.length)for(o=e[t];(r.test(o)||s.test(o)||"_"===o)&&t+1<=e.length;)i+=o,o=e[++t];a.push({type:"name",value:i})}else if("'"!==o){if('"'!==o)throw new TypeError("Type Error! Unrecognized Character: "+o);i="";for(o=e[++t];'"'!==o;)i+=o,o=e[++t];o=e[++t],a.push({type:"string",value:i})}else{var i="";for(o=e[++t];"'"!==o;)i+=o,o=e[++t];o=e[++t],a.push({type:"string",value:i})}else a.push({type:"curly",value:o}),t++;else a.push({type:"semi",value:";"}),t++;else a.push({type:"comma",value:","}),t++;else a.push({type:"dot",value:"."}),t++;else a.push({type:"colon",value:":"}),t++;else a.push({type:"paren",value:o}),t++;else a.push({type:"grave",value:"`"}),t++;else a.push({type:"tilde",value:"~"}),t++;else a.push({type:"caret",value:"^"}),t++;else a.push({type:"at",value:"@"}),t++;else a.push({type:"dollar",value:"$"}),t++;else a.push({type:"percent",value:"%"}),t++;else a.push({type:"and",value:"&"}),t++;else a.push({type:"pipe",value:"|"}),t++;else a.push({type:"greater",value:">"}),t++;else a.push({type:"less",value:"<"}),t++;else a.push({type:"question",value:"?"}),t++;else if("/"===e[++t])for(;t<e.length&&!n.test(e[t]);)t++;else if("*"===e[t])for(t++;t<e.length;){if("*"===e[t]&&"/"===e[++t]){t++;break}t++}else a.push({type:"forwardslash",value:"/"});else a.push({type:"plus",value:"+"}),t++;else a.push({type:"minus",value:"-"}),t++;else a.push({type:"bracket",value:o}),t++;else a.push({type:"not",value:"!"}),t++;else a.push({type:"hash",value:"#"}),t++;else a.push({type:"star",value:"*"}),t++;else a.push({type:"equal",value:"="}),t++}return a}function traverser(e,t){function a(e,t){e.forEach(e=>{r(e,t)})}function r(e,r){let n=t[e.type];switch(n&&n.enter&&n.enter(e,r),e.type){case"Program":a(e.body,e);break;case"CodeCave":a(e.params,e);break;case"CodeDomain":a(e.params,e);case"Arr":case"NumberLiteral":case"StringLiteral":case"Word":case"Delimiter":case"Terminator":case"Equal":case"Pointer":case"IncByOne":case"DecByOne":case"Arrow":case"Plus":case"Minus":case"IncByNum":case"DecByNum":case"ForwardSlash":case"ComparisonE":case"ComparisonN":case"Macro":case"Not":case"Colon":case"Less":case"Greater":case"LessOrEqual":case"GreaterOrEqual":case"Dot":case"XorEqual":case"OrOr":case"Pipe":case"AndAnd":case"And":case"Question":case"Hex":case"Tab":case"VTab":case"Oct":case"Newline":case"CRet":case"Alert":case"Backspace":case"QueMark":break;default:throw new TypeError(e.type)}n&&n.exit&&n.exit(e,r)}r(e,null)}function transformer(e){let t={type:"Program",body:[]};return e._context=t.body,traverser(e,{NumberLiteral:{enter(e,t){t._context.push({type:"NumberLiteral",value:e.value})}},Word:{enter(e,t){t._context.push({type:"Word",value:e.value})}},IncByOne:{enter(e,t){t._context.push({type:"IncByOne",value:e.value})}},DecByOne:{enter(e,t){t._context.push({type:"DecByOne",value:e.value})}},Arrow:{enter(e,t){t._context.push({type:"Arrow",value:e.value})}},OrOr:{enter(e,t){t._context.push({type:"Or",value:e.value})}},Pipe:{enter(e,t){t._context.push({type:"Pipe",value:e.value})}},And:{enter(e,t){t._context.push({type:"And",value:e.value})}},AndAnd:{enter(e,t){t._context.push({type:"AndAnd",value:e.value})}},Tab:{enter(e,t){t._context.push({type:"Tab",value:e.value})}},VTab:{enter(e,t){t._context.push({type:"VTab",value:e.value})}},Hex:{enter(e,t){t._context.push({type:"Hex",value:e.value})}},Oct:{enter(e,t){t._context.push({type:"Oct",value:e.value})}},Newline:{enter(e,t){t._context.push({type:"Newline",value:e.value})}},CRet:{enter(e,t){t._context.push({type:"CRet",value:e.value})}},Alert:{enter(e,t){t._context.push({type:"Alert",value:e.value})}},Backspace:{enter(e,t){t._context.push({type:"Backspace",value:e.value})}},QueMark:{enter(e,t){t._context.push({type:"QueMark",value:e.value})}},Plus:{enter(e,t){t._context.push({type:"Plus",value:e.value})}},Minus:{enter(e,t){t._context.push({type:"Minus",value:e.value})}},IncByNum:{enter(e,t){t._context.push({type:"IncByNum",value:e.value})}},DecByNum:{enter(e,t){t._context.push({type:"DecByNum",value:e.value})}},ForwardSlash:{enter(e,t){t._context.push({type:"ForwardSlash",value:e.value})}},ComparisonE:{enter(e,t){t._context.push({type:"ComparisonE",value:e.value})}},ComparisonN:{enter(e,t){t._context.push({type:"ComparisonN",value:e.value})}},Macro:{enter(e,t){t._context.push({type:"Macro",value:e.value})}},Not:{enter(e,t){t._context.push({type:"Not",value:e.value})}},Colon:{enter(e,t){t._context.push({type:"Colon",value:e.value})}},Dot:{enter(e,t){t._context.push({type:"Dot",value:e.value})}},Question:{enter(e,t){t._context.push({type:"Question",value:e.value})}},Less:{enter(e,t){t._context.push({type:"Less",value:e.value})}},Greater:{enter(e,t){t._context.push({type:"Greater",value:e.value})}},GreaterOrEqual:{enter(e,t){t._context.push({type:"GreaterOrEqual",value:e.value})}},LessOrEqual:{enter(e,t){t._context.push({type:"LessOrEqual",value:e.value})}},XorEqual:{enter(e,t){t._context.push({type:"XorEqual",value:e.value})}},Arr:{enter(e,t){t._context.push({type:"Arr",value:e.params})}},Pointer:{enter(e,t){t._context.push({type:"Pointer",value:e.value})}},Equal:{enter(e,t){t._context.push({type:"Equal",value:e.value})}},Delimiter:{enter(e,t){t._context.push({type:"Delimiter",value:e.value})}},Terminator:{enter(e,t){t._context.push({type:"Terminator",value:e.value})}},StringLiteral:{enter(e,t){t._context.push({type:"StringLiteral",value:e.value})}},CodeCave:{enter(e,t){if(void 0!==e.name)var a={type:"CodeCave",callee:{type:"Identifier",name:e.name},arguments:[]};else a={type:"CodeCave",arguments:[]};e._context=a.arguments,"Program"===t.type&&(a={type:"Function",expression:a}),t._context.push(a)}},CodeDomain:{enter(e,t){var a={type:"CodeDomain",arguments:[]};e._context=a.arguments,"CodeDomain"!==t.type&&(a={type:"Function",expression:a}),t._context.push(a)}}}),t}var keywords=["auto","double","int","struct","break","else","long","switch","case","enum","register","typedef","char","extern","return","union","const","float","short","unsigned","continue","for","signed","void","default","goto","sizeof","volatile","do","if","static","while"],dataTypes=["int","char","float","double","void"];function verifier(e){for(var t=[],a=0;a<e.length;a++)t.push(e[a].name);if(!verifyFunctionNames(t))throw new TypeError("error in function definition: duplicate or illigal name!");for(var r=0;r<e.length;){var n=e[r];if(!verifyReturnType(n.returnType))throw new TypeError("returnType error in function definition for the function: "+n.name);if(!verifyFunctionArguments(n.args))throw new TypeError("Error in function definition: Invalid Arguments!");if(!verifyFunctionBody(n.body))throw new TypeError("Error! Function Body (Statements) are screwed up!");r++}return 1}function verifyFunctionBody(e){for(var t=0;t<e.length;){var a=e[t];if("Statement"===a.type){var r=a.value;if("Terminator"!==r[r.length-1].type)return 0;for(var n=0;n<r.length;n++)if("return"===r[n].value&&0!==n)return 0}if("if"===a.type){var u=a.condition;if(1===u.length){if("Word"===u[0].type){if(-1!==keywords.indexOf(u[0].value))return 0}else if("NumberLiteral"===u[0].type){t++;continue}}else if(3===u.length&&("ComparisonE"===u[1].type||"ComparisonN"===u[1].type||"Greater"===u[1].type||"GreaterOrEqual"===u[1].type||"Less"===u[1].type||"LessOrEqual"===u[1].type)){if(-1===keywords.indexOf(u[0].value)&&-1===keywords.indexOf(u[1].value)){t++;continue}return 0}if(!verifyFunctionBody(a.body))return 0}t++}return 1}function verifyFunctionNames(e){for(var t=0;t<e.length;t++)if(-1!==keywords.indexOf(e[t]))return 0;var a=e.slice().sort(),r=[];for(t=0;t<a.length-1;t++)a[t+1]==a[t]&&r.push(a[t]);return 0!==r.length?0:1}function verifyReturnType(e){return dataTypes.indexOf(e)>-1?1:0}function verifyFunctionArguments(e){for(var t=0;t<e.length;){var a=e[t];if(!(dataTypes.indexOf(a.type)>-1&&-1===keywords.indexOf(a.name)))return 0;t++}return 1}