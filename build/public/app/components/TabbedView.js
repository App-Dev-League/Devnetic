const codeTemplateToCode=require("../utils/codeTemplateToCode.js");class TabbedView extends tApp.Component{constructor(t,e){super(t,e),null==this.state.tabs&&(this.state.tabs=[{name:"",component:null}]),null==this.state.selected&&(this.state.selected=0),null==this.state.currentTabComponent&&(this.state.tabs[0]?this.state.startingTabIndex?(this.state.currentTabComponent=this.state.tabs[this.state.startingTabIndex].component,this.state.selected=this.state.startingTabIndex):this.state.currentTabComponent=this.state.tabs[0].component:this.state.currentTabComponent="")}updateTab(t){this.setState("selected",t),!0===this.state.forceReRender&&(document.querySelector(`[tapp-component="${this.id}"]`).querySelector(".selected-tab").innerHTML=""),this.setState("currentTabComponent",this.state.tabs[t].component),this.state.onTabChange&&this.state.onTabChange(t)}render(t){var n=this,e="";return this.state.classList&&this.state.classList.forEach(t=>e+=" "+t),`<div class="project-module-tabs ${e}">
			<div class="tab-group">
				${this.state.tabs.map((t,e)=>{var a=t.tabDataset||{};let s="";return Object.entries(a).forEach(([t,e])=>{s+=`data-${t}="${e}" `}),n.state.useSavedFileDataInNaming&&(window.tabSavedData&&!1===window.tabSavedData[e.toString()]&&!t.name.endsWith(" •")?t.name=t.name+" •":window.tabSavedData&&!0===window.tabSavedData[e.toString()]&&t.name.endsWith(" •")&&(t.name=t.name.slice(0,-2))),`<div class="tab${e==this.state.selected?" tab-selected":""}" ${s} onclick="{{_this}}.updateTab(${e})">${t.name}</div>`}).join("")}
			</div>
			<div class="selected-tab">
				${this.state.currentTabComponent}
			</div>
		</div>`}}module.exports=TabbedView;