{"type":"project","pages":[{"type":"information","title":"Week 7 Project - Information Displayer with React","elements":[{"type":"text","content":"➔ Create a functional component to retrieve inputs about a person’s information"},{"type":"text","content":"➔ Use JSX to write HTML code in that component that sets up the UI for this application"},{"type":"text","content":"➔ Render the HTML code to specific divs using ReactDOM.render "},{"type":"text","content":"➔ Once done, changed the rendered values within the component"},{"type":"text","content":"[[ ]][[ ]]◆ Use Google Chrome’s DevTools to observe how changes in the component change the UI"}]},{"type":"code_editor","storage_id":["webdev-6-0-0.jsx","webdev-6-0-1.jsx","webdev-6-0-2.jsx"],"files":["main.jsx","header.jsx","infoDisplayer.jsx"],"default":["import Header from \"./header.jsx\"\nimport InfoDisplayer from \"./infoDisplayer.jsx\"\n\n// The dom container's element ID is root\nconst domContainer = document.querySelector('#root');","// Export any React components that you want to use in the app\nexport default YourComponent;","// Export any React components that you want to use in the app\nexport default YourComponent;"],"display_type":"web","elements":[{"type":"text","content":"[[h3]]Setting up our workspace[[/]]"},{"type":"text","content":"Important: You can skip this step if you are following along in "},{"type":"text","content":"➔ Let’s first setup a React.JS app in replit. (Hit create and then select “react” as a language)"},{"type":"text","content":"➔ Then, create a component called “header”, and import it into your project (You can put anything you want in here)"},{"type":"text","content":"➔ Next, let’s create another folder inside of “components” named “infoDisplayer,” and create a file named “infoDisplayer.jsx” inside of it"},{"type":"text","content":"➔ Lastly, import it into “main.jsx” again."}],"hints":[],"validation":[],"points":0,"coins":0},{"type":"code_editor","storage_id":["webdev-6-0-0.jsx","webdev-6-0-1.jsx","webdev-6-0-2.jsx"],"files":["main.jsx","header.jsx","infoDisplayer.jsx"],"default":["import Header from \"./header.jsx\"\nimport InfoDisplayer from \"./infoDisplayer.jsx\"\n\n// The dom container's element ID is root\nconst domContainer = document.querySelector('#root');","// Export any React components that you want to use in the app\nexport default YourComponent;","// Export any React components that you want to use in the app\nexport default YourComponent;"],"display_type":"web","elements":[{"type":"text","content":"[[h3]]infoDisplayer.jsx[[/]]"},{"type":"text","content":"➔ Inside of this file, first create a function with a parameter named “props”. "},{"type":"text","content":"➔ Then, display some props like “stats” (Like name, age, favorite color, etc.)"},{"type":"text","content":"➔ Lastly, export this function"},{"type":"text","content":"➔ Just a refresher, access the props with {props.yourPropName} "},{"type":"text","content":"➔ When you run the project right now, you probably won’t see much, but we’ll change this in the next slide "},{"type":"code","content":"import React from 'react';\n\nfunction infoDisplayer(props){\n\treturn (\n\t<div>\n\t\t<h5>Name: {props.name}</h5>\n\t\t<h5>Age: {props.age}</h5>\n\t\t<h5>Favorite Color: {props.color}</h5>\n\t\t<h5>Favorite book: {props.book}</h5>\n\t</div>\n\t)\n}\n\nexport default infoDisplayer","lang":"jsx"}],"hints":[],"validation":[],"points":0,"coins":0},{"type":"code_editor","storage_id":["webdev-6-0-0.jsx","webdev-6-0-1.jsx","webdev-6-0-2.jsx"],"files":["main.jsx","header.jsx","infoDisplayer.jsx"],"default":["import Header from \"./header.jsx\"\nimport InfoDisplayer from \"./infoDisplayer.jsx\"\n\n// The dom container's element ID is root\nconst domContainer = document.querySelector('#root');","// Export any React components that you want to use in the app\nexport default YourComponent;","// Export any React components that you want to use in the app\nexport default YourComponent;"],"display_type":"web","elements":[{"type":"text","content":"[[h3]]Passing in props[[/]]"},{"type":"text","content":"To actually make the website show info, we need to pass in some props into the React component"},{"type":"text","content":"➔ To call this, just pass in the props like you would with standard HTML attributes (ex. name=”FooBar”) "},{"type":"code","content":"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Header from './header.jsx'\nimport InfoDisplayer from './infoDisplayer.jsx';\n\nReactDOM.render(\n\t<div>\n\t\t<Header/>\n\t\t<InfoDisplayer name=\"Bob\" age=\"15\" color=\"Blue\" book=\"Lord of the Rings\"/>\n\t</div>,\n\tdocument.getElementById('root')\n)","lang":"jsx"}],"hints":[],"validation":[],"points":0,"coins":0},{"type":"information","title":"Going further","elements":[{"type":"text","content":"React.JS is really smart. If you update something in a component, it will only re-render that component, instead of re-rendering the entire page (which is really resource intensive and can slow down performance)"},{"type":"text","content":"➔ For example, let’s say that you have a clock on your website. Everytime it updates, you don’t want React.JS to re-render the entire page. (That’s really slow). Instead, React.JS only re-renders the component that contains the clock."},{"type":"text","content":"➔ This is why components are really important. If you don’t have the “clock” component (in our example above), then React.JS will be forced to re-render the entire page."},{"type":"text","content":"As a reminder, all of the source code for this project can be found here: [[a]]https://github.com/App-Dev-League/curriculum-hub-webdev/tree/main/week7-project[[/]]."}]}]}