function clearSelection() {
  if (window.getSelection) { window.getSelection().removeAllRanges(); }
  else if (document.selection) { document.selection.empty(); }
}

function updateEditorSettings(parameters) {
  let currentSettings = localStorage.getItem("editorSettings")
  if (currentSettings === null) {
    currentSettings = {}
  } else {
    currentSettings = JSON.parse(currentSettings)
  }
  Object.entries(parameters).forEach(([key, value]) => {
    currentSettings[key] = value
  })
  localStorage.setItem("editorSettings", JSON.stringify(currentSettings))
}


let styles = `
.vertical-divider {
  cursor: e-resize;
}
.project-module-tabs:nth-child(1) {
  width: var(--editorLeftTabWidth) !important;
}
.project-module-tabs:nth-child(3) {
  width: var(--editorRightTabWidth) !important;
  left: var(--editorRightTabLeft) !important;
}
`

let styleElement = document.createElement("style")
styleElement.innerHTML = styles
document.body.appendChild(styleElement)
function loadSettings() {
  let currentSettings = localStorage.getItem("editorSettings")
  if (currentSettings === null) {
    currentSettings = {}
  } else {
    currentSettings = JSON.parse(currentSettings)
  }
  if (currentSettings.dividerPosition === null) currentSettings.dividerPosition = window.innerWidth / 2;
  document.querySelector(".vertical-divider").style.left = currentSettings.dividerPosition + "px"
  var root = document.querySelector(':root');
  root.style.setProperty('--editorLeftTabWidth', currentSettings.dividerPosition - 4 + "px");
  root.style.setProperty("--editorRightTabWidth", window.innerWidth - currentSettings.dividerPosition + "px");
  root.style.setProperty("--editorRightTabLeft", currentSettings.dividerPosition + "px");

  if (document.querySelector(".codicon.codicon-new-file")) {
    document.querySelector(".codicon.codicon-new-file").style.left = "calc(var(--editorLeftTabWidth) + 45vw)"
    document.querySelector(".codicon.codicon-new-file").style.right = "auto"
    document.querySelector(".codicon.codicon-cloud-upload").style.left = "calc(var(--editorLeftTabWidth) + 45vw + 25px)"
    document.querySelector(".codicon.codicon-cloud-upload").style.right = "auto"
  }
}
reloadPluginSettings()
function reloadPluginSettings() {
  loadSettings()
  document.querySelector(".vertical-divider").style.zIndex = 2
  document.querySelector(".vertical-divider").addEventListener("mousedown", function (e) {
    return new Promise((resolve, reject) => {
      let divider = document.querySelector(".vertical-divider");
      document.addEventListener("mouseup", onMouseUp)
      document.addEventListener("mousemove", onMouseMove)

      function onMouseUp() {
        document.removeEventListener("mouseup", onMouseUp)
        document.removeEventListener("mousemove", onMouseMove)
        updateEditorSettings({ dividerPosition: parseInt(divider.style.left) })
        resolve()
      }
      function onMouseMove(e) {
        if (e.clientX > window.innerWidth - 6) return;
        clearSelection()
        divider.style.left = e.clientX + "px"
        var root = document.querySelector(':root');
        root.style.setProperty('--editorLeftTabWidth', e.clientX + "px");
        root.style.setProperty("--editorRightTabWidth", window.innerWidth - e.clientX + "px");
        root.style.setProperty("--editorRightTabLeft", e.clientX + "px");
      }
    })
  })

}