var version="v29::";self.addEventListener("install",function(e){e.waitUntil(()=>{self.skipWaiting()})}),self.addEventListener("fetch",function(c){var e;"GET"===c.request.method&&(e=(async()=>new Promise((t,e)=>{let s=c.request.url.split("#")[0],n=indexedDB.open("tAppCache",5),o;function a(n){return new Promise((t,e)=>{fetch(n).then(e=>{t(e)}).catch(()=>{var e=new Response("",{status:500,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})});Object.defineProperty(e,"url",{value:s}),t(e)})})}n.onupgradeneeded=function(){(o=n.result).objectStoreNames.contains("cachedPages")||o.createObjectStore("cachedPages"),o.objectStoreNames.contains("offlineStorage")||o.createObjectStore("offlineStorage")},n.onsuccess=async function(){var r;o=n.result,r=s,new Promise((n,e)=>{if("Ignore-Cache"!=c.request.headers.get("tApp-Ignore-Cache")){let t=o.transaction(["cachedPages"],"readwrite").objectStore("cachedPages").get(r);t.onerror=e=>{a(s).then(e=>{n(e)})},t.onsuccess=()=>{var e;a(s).then(t=>{200===t.status&&t.clone().arrayBuffer().then(e=>{var r,a;r=s,a={data:e,cachedAt:(new Date).getTime(),response:function(e){let n={};for(var t in e)"bodyUsed"!=t&&"object"!=typeof e[t]&&"function"!=typeof e[t]&&(n[t]=e[t]);return null!=e.headers&&(n.headers={},e.headers.forEach((e,t)=>{n.headers[t]=e})),n}(t)},new Promise((e,t)=>{let n=o.transaction(["cachedPages"],"readwrite").objectStore("cachedPages").put(a,r);n.onerror=()=>{t("tAppError: Persistent caching is not available in this browser.")},n.onsuccess=()=>{e(!0)}})})}),null!=t.result?(e=new Response(t.result.data,t.result.response),Object.defineProperty(e,"url",{value:s}),n(e)):a(s).then(e=>{n(e)})}}else a(s).then(e=>{n(e)})}).then(e=>{t(e)})},n.onerror=e=>{a(s).then(e=>{t(e)})}}))(),c.respondWith(e))}),self.addEventListener("activate",function(e){e.waitUntil(()=>{})});