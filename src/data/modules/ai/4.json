{
    "type": "lesson",
    "pages": [
        {
            "type": "information",
            "title": "Week 5 - Intro to Neural Networks",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]What is a Neural Network?[[/]]\n➔ Inspired by the human brain, a neural network is a machine learning algorithm which can be used for nearly all machine learning tasks.\n➔ A Neural Network consists of neurons, weights, biases, and layers."
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/0-0.png",
                    "width": "40%"
                },
                {
                    "type": "text",
                    "content": "[[h3]]Anatomy of a Neural Network[[/]]"
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/0-1.png",
                    "width": "40%"
                }
            ]
        },
        {
            "type": "information",
            "title": "Week 5 - Feedforward Process",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]Getting to the outputs[[/]]"
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/1-0.png",
                    "width": "25%",
                    "float": "right"
                },
                {
                    "type": "text",
                    "content": "➔ We start by taking the inputs and multiplying them by all connected weights (arrows in picture).\n➔ Then we take these multiplied inputs and put them into respective neurons (circles).\n➔ The neuron adds up every input it gets, and runs an activation function (more later).\n➔ Do this process for every layer (there can be many middle/\"hidden\" layers).\n[[h3]]Example[[/]]\n➔ Let’s take an oversimplified example with two inputs, one hidden layer with two nodes and one output. There is no activation function here. The diagram below shows all the feedforward processing."
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/1-1.png",
                    "width": "60%",
                    "float": "left"
                }
            ]
        },
        {
            "type": "information",
            "title": "Week 5 - Biases and Activation Functions",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]Biases[[/]]"
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/2-0.png",
                    "width": "15%",
                    "float": "right"
                },
                {
                    "type": "text",
                    "content": "➔ Consider a scenario where all the inputs are zero. No matter what the weights are, the output will always be zero.\n➔ In many cases, we don’t want a zero when all inputs are zero. To fix this, we add another fixed input known as the bias.\n    This happens at every single layer."
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/2-1.png",
                    "width": "25%",
                    "float": "right"
                },
                {
                    "type": "text",
                    "content": "[[h3]]Activation Function[[/]]\n➔ Activation functions help Neural Nets identify patterns in data.\n➔ Sigmoid\n    ◆ Non-linear function that is used for binary classification.\n    ◆ Produces a value between 0-1.\n    ◆ Used on the output layer."
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/2-2.png",
                    "width": "25%",
                    "float": "right"
                },
                {
                    "type": "text",
                    "content": "➔ Softmax\n   ◆ Similar to Sigmoid, but all values always add up to 1.\n   ◆ Used for multi-class classification.\n➔ ReLu.\n    ◆ Linear function used on input and hidden layers."
                }
            ]
        },
        {
            "type": "information",
            "title": "Week 5 - Applications",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]Using Neural Networks for ML[[/]]"
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/3-0.png",
                    "width": "25%",
                    "float": "right"
                },
                {
                    "type": "text",
                    "content": "➔ Supervised Learning - Find the optimal combinations of weights that minimizes some error metric.\n➔ Reinforcement Learning (Neuroevolution) - generate many random neural networks, judge their\n      fitness, and evolve them.\n➔ Unsupervised learning - neural networks can often find hidden patterns in data.\n[[h3]]Backpropagation and Gradient Descent[[/]]\n➔ This is the mathematics that powers supervised Neural Network algorithms.\n➔ Gradient descent - Neural networks find the gradient that minimizes error. Error can be calculated many different ways.\n➔ Backpropagation - Allows us to calculate the gradient which will produce that error reduction.\n[[h3]]Neuroevolution Crash Course[[/]]\n➔ Other than backpropagation and gradient descent, neuroevolution is another way to use neural networks.\n➔ In a basic sense, neurevolution initializes many randomly weighted neural networks, and picks the ones that are most effective at some task.\n➔ Then, the networks are evolved like genomes to produce a better agent over time."
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/3-1.png",
                    "width": "40%",
                    "float": "left"
                },
                {
                    "type": "image",
                    "src": "./data/modules/ai-assets/img4/3-2.png",
                    "width": "49%",
                    "float": "right"
                }
            ]
        },
        {
            "type": "multiple_choice",
            "question": "What can Neural Networks be used for?",
            "answers": [
                "Supervised Learning",
                "Unsupervised Learning",
                "Image Classification",
                "All of the above"
            ],
            "correct": 3,
            "descriptions": [
                "Neural Networks can do more than just supervised learning tasks! They are highly versatile.",
                "Neural Networks can do more than just unsupervised learning tasks! They are highly versatile.",
                "Neural Networks can do more than just image classification tasks! They are highly versatile!",
                "Correct! Neural Networks are extremely useful due to their versatility that allows us to use them for many different ML tasks."
            ],
            "points": 5,
            "coins": 1
        },
        {
            "type": "multiple_choice",
            "question": "What inspired the structure of Neural Networks?",
            "answers": [
                "The Human Brain",
                "Communication Networks",
                "Graph Theory",
                "Particle Physics"
            ],
            "correct": 0,
            "descriptions": [
                "Correct! The human brain inspired the the way the neural network is structured!",
                "Communication networks did not inspire the neural network. Hint: think of the term \"neural\" and why it could be used.",
                "While graph theory was involved in its development, it did not directly inspire the Neural Network. Hint: think of the term \"neural\" and why it could be used.",
                "Particle physics played no role in the structure of a neural network. Hint: think of the term \"neural\" and why it could be used."
            ],
            "points": 5,
            "coins": 1
        },
        {
            "type": "multiple_choice",
            "question": "What are the parts of a neural network?",
            "code_template": "",
            "answers": [
                "Neurons, Weights, Biases, and Layers",
                "Neurons, Dendrites, Axons, and Myelin Sheaths",
                "Nodes, Edges, Multiplicatives, and Results",
                "Inputs and Ouputs only"
            ],
            "correct": 0,
            "descriptions": [
                "Correct! Neural Networks consist of neurons, weights, biases and layers!",
                "These are the parts of the brain, not an artificial neural network.",
                "These parts do not accurately describe the parts of a neural network.",
                "Inputs and outputs are part of a neural network, but they are not the only parts."
            ],
            "points": 5,
            "coins": 1
        },
        {
            "type": "multiple_choice",
            "question": "What is a neuron?",
            "code_template": "",
            "answers": [
                "Another name for a layer",
                "The hidden processing layer of a Neural Network",
                "An input to the Neural Network",
                "A single processing unit of a Neural Network"
            ],
            "correct": 3,
            "descriptions": [
                "Neuron is not an alternative name for a layer. Rather, a layer is made up of many neurons.",
                "The neuron is not a layer. Rather, a layer is made up of many neurons.",
                "A neuron is not an input to the Neural Network. Rather, a neuron can process inputs.",
                "Correct! A neuron is a single processing unit in a Neural Network"
            ],
            "points": 5,
            "coins": 1
        },
        {
            "type": "multiple_choice",
            "question": "How do you conduct feedforward in a Neural Network?",
            "code_template": "",
            "answers": [
                "Feed data forward using a chain of neurons",
                "Subsequent neurons make calculations in layers and send them to weights.",
                "Multiply inputs by weights and sum them at neurons until you reach the end.",
                "Take in input and pass them through multiple calculations"
            ],
            "correct": 2,
            "descriptions": [
                "Feed forward does not feed data into a chain of neurons. Think of the diagrams in this chapter.",
                "Neurons do not send calculations to weights. Think of the diagrams in this chapter.",
                "Correct! Feedforward takes every input, multiplies by weights, and sums them at every neuron till the final layer is reached.",
                "Feedforward does not simply pass inputs through many calculations. Think of the diagrams in this chapter"
            ],
            "points": 10,
            "coins": 3
        },
        {
            "type": "multiple_choice",
            "question": "What happens if all your inputs are zero AND there are no biases",
            "code_template": "",
            "answers": [
                "The result is always 1",
                "The result is always 0",
                "The neural network cannot conduct feedforward",
                "The result is always 2"
            ],
            "correct": 1,
            "descriptions": [
                "The result of all inputs being 0 with no weights is not 1. What happens when you multiply numbers by 0?",
                "Correct! If no biases are present, no adjustment is made to the feedforward and the result is always 0",
                "Even if there are no biases and the inputs are 0, feedforward can be conducted. What is the result of feedforward with all 0 inputs?",
                "The result of all inputs being 0 with no weights is not 2. What happens when you multiply numbers by 0?"
            ],
            "points": 5,
            "coins": 1
        },
        {
            "type": "short_answer",
            "question": "Consider the following neural network: All weights are 1 and all inputs are 0. If the sum of the biases is 16 and there is only one output node, what is the output?",
            "code_template": "",
            "answers": [
                "Sixteen",
                "16",
                "sixteen"
            ],
            "descriptions": {},
            "description_default": "All the biases are multiplied by weights (1) and summed to get the final answer, so the sum of the biases is our answer.",
            "points": 10,
            "coins": 3
        },
        {
            "type": "multiple_choice",
            "question": "Which of the following is not an activation function?",
            "code_template": "",
            "answers": [
                "ReLu",
                "Softmax",
                "Sigmoid",
                "Backpropogation"
            ],
            "correct": 3,
            "descriptions": [
                "ReLu is a linear activation function used on input and hidden layers.",
                "Softmax is an activation function that produces values between 0 and 1 that all add up to 1.",
                "Sigmoid is a non-linear function that is used for binary classification that produces values between 0 and 1",
                "Correct! Backpropogation is a ML algorithm used with neural networks, not an activation function."
            ],
            "points": 10,
            "coins": 3
        },
        {
            "type": "short_answer",
            "question": "What is the sum of the values produced by a Softmax activation function?",
            "code_template": "",
            "answers": [
                "1",
                "One",
                "one"
            ],
            "descriptions": {},
            "description_default": "The softmax activation always produces values between 0 and 1, so what could they sum to?",
            "points": 10,
            "coins": 3
        },
        {
            "type": "multiple_choice",
            "question": "What is the difference between Sigmoid and Softmax?",
            "code_template": "",
            "answers": [
                "Sigmoid produces a distribution of values between 0 and 1; Softmax does not",
                "Softmax produces a distribution of values between 0 and 1; Sigmoid does not",
                "In the Sigmoid distribution, all values produces are between 0 and 1 and add up to 1; values do not add up to 1 in Softmax",
                "In the Softmax distribution, all values produces are between 0 and 1 and add up to 1; values do not add up to 1 in Sigmoid"
            ],
            "correct": 3,
            "descriptions": [
                "Both Softmax and Sigmoid produce values between 0 and 1",
                "Both Softmax and Sigmoid produce values between 0 and 1",
                "Sigmoid values do not add up to 1",
                "Correct! Softmax produces values between 0 and 1 that add to 1 but Sigmoid produces values between 0 and 1 that may not add up to 1"
            ],
            "points": 10,
            "coins": 3
        },
        {
            "type": "multiple_choice",
            "question": "How can we use Neural Networks for supervised learning?",
            "code_template": "",
            "answers": [
                "Find the optimal combination of weights and biases using math and error",
                "Find the optimal Neurons using math and error",
                "Find hidden patterns in data",
                "Evolve the network to over time"
            ],
            "correct": 0,
            "descriptions": [
                "Correct! By finding the optimal combination of weights and biases, the neural network can make accurate predictions.",
                "The neurons are unaffected in a naural network as they simply add up any inputs to them",
                "Finding hidden patterns is an unsupervised rather than supervised learning task.",
                "Evolving neural networks with a genetic algorithm is not a supervised learning task."
            ],
            "points": 10,
            "coins": 3
        },
        {
            "type": "multiple_choice",
            "question": "What is neuroevolution?",
            "code_template": "",
            "answers": [
                "A process by which the brains on animals evolve",
                "Evolving neural networks by genetic algorithms to find optimal weights",
                "Evolving neural networks via a reward",
                "Using evolution to code a process for feedforward in Neural Networks"
            ],
            "correct": 1,
            "descriptions": [
                "Neuroevolution is a machine learning process, not a biological one",
                "Correct! Neuroevolution involves using genetic algorithms to \"evolve\" neural networks",
                "Rewards are involved in other types of reinforcement learning, not neuroevolution",
                "The feedforward process does not change between neural networks"
            ],
            "points": 10,
            "coins": 3
        },
        {
            "type": "multiple_choice",
            "question": "How can neural networks be used for unsupervised learning?",
            "code_template": "",
            "answers": [
                "They can find hidden patterns in data",
                "Then can use backpropogation and gradient descent",
                "They can find the optimal neurons for learning",
                "They can train without any data"
            ],
            "correct": 0,
            "descriptions": [
                "Correct! Neural Networks can find hidden patterns in data - an unsupervised learning task",
                "This process is used for supervised rather than unsupervised learning",
                "Neurons are unchanged during learning for Neural Networks",
                "Every machine learning process requires the use of data"
            ],
            "points": 5,
            "coins": 1
        },
        {
            "type": "multiple_choice",
            "question": "What is gradient descent?",
            "code_template": "",
            "answers": [
                "A way to lower the amount of resources used by Neural Networks",
                "A way to optimize Neural Network training",
                "A method that reduces the number of training steps required",
                "A mathematical process to calculate error gradients to train Neural Networks"
            ],
            "correct": 3,
            "descriptions": [
                "Gradient descent does not lower the amount of resources used by Neural Networks",
                "Gradient descent does not optimize Neural Network training",
                "Gradient descent does not reduce the number of training steps required",
                "Correct! Gradient descent helps calculate error gradients in order to train our Neural Network for supervised learning"
            ],
            "points": 10,
            "coins": 3
        },
        {
            "type": "congratulations",
            "title": "Congratulations!",
            "elements": [
                {
                    "type": "text",
                    "content": "In this module, you learned all about Neural Networks:\n[[h3]]Neural Network[[/]]\n➔ Machine learning algorithm that can be used for nearly all machine learning tasks.\n➔ Consists of weights, neurons, biases, and layers.\n[[h3]]Anatomy of a Neural Network[[/]]\n➔ Inputs are directly connected to a hidden layer via weights, which can then be connected to another hidden layer and so on.\n➔ The final hidden layer connects to the output layer.\n➔ Output layer sends the outputs to whatever is receiving them.\n[[h3]]Feedforward[[/]]\n➔ Multiply inputs by weights.\n➔ Sum incoming weighted inputs at each neuron.\n➔ Continue for each layer until you reach the output neurons.\n➔ Get outputs.\n[[h3]]Biases[[/]]\n➔ If all inputs are zero without biases, the result is always zero.\n➔ Sometimes we want something other than 0 when inputs are all zeros.\n➔ Each bias adds a value to a neuron to offset from 0.\n[[h3]]Activation Functions[[/]]\n➔ Modify data to change help processing.\n➔ Helps neural networks identify patterns.\n➔ Common activation functions include Sigmoid, Softmax, and ReLu\n[[h3]]Using Neural Networks for ML[[/]]\n➔ Supervised Learning - Use training data to find optimal weight combinations that minimize error.\n➔ Reinforcement Learning (NeuroEvolution) - Generate many random neural networks, judge their fitness, and evolve them.\n➔ Unsupervised Learning - Find hidden patterns in data.\n[[h3]]Backpropagation/Gradient Descent[[/]]\n➔ The mathematics that powers supervised Neural Network algorithms.\n➔ Gradient Descent - Reducing error using an error gradient. The error can be calculated in many ways\n➔ Backpropagation - Allows us to calculate the gradient which will produce that error reduction.\n[[h3]]NeuroEvolution[[/]]\n➔ Another way to use neural networks.\n➔ Initializes many randomly weighted neural networks and picks the ones that are most effective at some task. \n➔ Then, the networks are evolved genetically to produce a better agent over time."
                }
            ]
        }
    ]
}