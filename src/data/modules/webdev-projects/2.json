{
    "type": "project",
    "pages": [
        {
            "type": "information",
            "title": "Week 3 Project - Console Games with JS",
            "elements": [
                {
                    "type": "text",
                    "content": "➔ Create mad libs, rock-paper-scissors, and  tic-tac-toe with JavaScript\n➔ Learn how to create interactive programs\n➔ Learn how to utilize the console\n➔ Use global Javascript variables in functions"
                }
            ]
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]Initialize global variables.[[/]]"
                },
                {
                    "type": "code",
                    "content": "var coinFlipScore = 0;\nvar rockPaperScissorScore = 0;"
                },
                {
                    "type": "text",
                    "content": "Increment global variables by one every time the user wins."
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]Functions[[/]]\nEach of the games will be start when their respective functions are called."
                },
                {
                    "type": "code",
                    "content": "function madLibs(adj, nouni, verb, noun2) {}\nfunction coinFlip(userChoice) {} \nfunction rockPaperScissors(userChoice) {}"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]madLibs function[[/]]\nUse string concentration to insert variables into a string"
                },
                {
                    "type": "code",
                    "content": "function madLibs(adj, nounl, verb, noun2) {\n\tconsole.log(`The ${adj} ${nounl} ${verb} over the ${noun2}.`);\n} "
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function[[/]]\n➔ Convert the user’s choice to lowercase.\n➔ Validate user’s choice by checking if it’s “rock”, “paper”, or “scissors”.\n➔ Use return statement to exit function and return [[`]]undefined[[`]]."
                },
                {
                    "type": "code",
                    "content": "function rockPaperScissors(userChoice) {\n\tuserChoice = userChoice.toLowerCase();\n\tif(![\"rock\", \"paper\", \"scissors\"].includes(userChoice)) {\n\treturn console.log( \"Invalid option. Must be \\\"rock\\\", \\\"paper\\\", or \\\"scissors\\\".\");\n\t}\n\t// continued on next page \n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]\n➔ Randomize coin flip"
                },
                {
                    "type": "code",
                    "content": "var randomNumber = Math.floor(Math.random() * 3);\nvar computerChoice; \nif (randomNumber === 2) {\n\tcomputerChoice = \"rock\"; \n} else if (randomNumber === 1) {\n\tcomputerChoice = \"paper\"; \n} else {\n\tcomputerChoice = \"scissors\";\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]\n➔ Check remaining possible combinations of choices.\n[[ ]][[ ]]◆ If user choice is rock and the computer’s is paper, than the computer wins.\n[[ ]][[ ]]◆ Else, user wins."
                },
                {
                    "type": "code",
                    "content": "else if (userChoice === \"rock\") {\n\tif (computerChoice === \"paper\") {\n\twinner = \"computer\";\n\t} else {\n\twinner = \"user\";\n\trockPaperScissorsScore++\n\t}\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]\n➔ Check remaining possible combinations of choices.\n[[ ]][[ ]]◆ If user choice is paper and the computer’s is scissor, than the computer wins.\n[[ ]][[ ]]◆ Else, user wins."
                },
                {
                    "type": "code",
                    "content": "else if (userChoice === \"paper\") {\n\tif (computerChoice === \"scissors\") {\n\twinner = \"computer\";\n\t} else {\n\twinner = \"user\";\n\trockPaperScissorsScore++\n\t}\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]\n➔ Check remaining possible combinations of choices.\n[[ ]][[ ]]◆ If user choice is scissors and the computer’s is rock, than the computer wins.\n[[ ]][[ ]]◆ Else, user wins."
                },
                {
                    "type": "code",
                    "content": "else if (userChoice === \"scissors\") {\n\tif (computerChoice === \"rock\") {\n\twinner = \"computer\";\n\t} else {\n\twinner = \"user\";\n\trockPaperScissorsScore++\n\t}\n}",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]rockPaperScissors function (cont.)[[/]]\n➔ Return statement"
                },
                {
                    "type": "code",
                    "content": "console.log(`The user chose ${userChoice}, and the computer chose ${computerChoice}, so the winner is the ${winner ?? \"no one\"} and your score is ${rockPaperScissorScore}`)",
                    "lang": "javascript"
                }
            ],
            "hints": [],
            "validation": [],
            "points": 0,
            "coins": 0
        },
        {
            "type": "code_editor",
            "storage_id": [
                "webdev-2-0-0.js"
            ],
            "files": [
                "index.js"
            ],
            "default": [
                "console.log(\"Hello World\")"
            ],
            "display_type": "web",
            "elements": [
                {
                    "type": "text",
                    "content": "[[h3]]coinFlip function [[/]]\n➔ Convert user’s choice to lower case.\n➔ Check that it’s “heads” or tails”. If not, use return statement to exit the function and return undefined.\n➔ Generate random number.\n➔ Use number to choose “heads” or “tails”.\n➔ Compare the user’s and computer’s choice and determine winner.\n➔ Return statement"
                },
                {
                    "type": "code",
                    "content": "function coinFlip(userChoice) {\n\tuserChoice = userChoice.toLowerCase();\n\tif (![\"heads\", \"tails\"].includes(userChoice)) {\n\treturn console.log( \"Invalid option. Must be 'heads' or 'tails'\");\n\t}\n\tvar winner;\n\tvar computerChoice = Math.floor(Math.random() * 2) === 0 ? \"heads\" : \"tails\";\n\tif (userChoice === computerChoice) {\n\twinner = \"user\";\n\tcoinFlipScore++;\n\t} else {\n\twinner = \"computer\";\n\t}\n\tconsole.log(`The user chose ${userChoice}, and the computer chose ${computerChoice}, so the winner is ${winner} and your score is ${coinFlipScore}`)\n}"
                }
            ],
            "hints": [],
            "validation": [
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-2-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "madLibs(\"happy\", \"dog\", \"jump\", \"moon\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "The happy dog jump over the moon.",
                            "runwhen": "immediately",
                            "filters": [
                                "trim"
                            ],
                            "onerror": "Uh oh! The Mad Libs function didn't work. We expected the sentence to be 'The happy dog jump over the moon.'"
                        }
                    ]
                },
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-2-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "madLibs(\"sad\", \"monkey\", \"cried\", \"eggs\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "The sad monkey cried over the eggs.",
                            "runwhen": "immediately",
                            "filters": [
                                "trim"
                            ],
                            "onerror": "The Mad Libs function didn't work. We expected the sentence to be 'The sad monkey cried over the eggs.'"
                        }
                    ]
                },
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-2-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "coinFlip(\"heads\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "object",
                            "runwhen": "immediately",
                            "filters": [
                                "typeof"
                            ],
                            "onerror": "We expected a string to be logged when run! Instead, we got a {{output}}"
                        }
                    ]
                },
                {
                    "validate": true,
                    "type": "validate-output",
                    "actions": [
                        {
                            "run": "webdev-2-0-0.js",
                            "editorIndex": 0
                        },
                        {
                            "exec": "rockPaperScissors(\"rock\")",
                            "runwhen": "immediately"
                        },
                        {
                            "expect": "",
                            "runwhen": "immediately",
                            "reject": true,
                            "matches": [
                                {
                                    "type": "regex",
                                    "value": "Error: ",
                                    "filters": [
                                        "toString"
                                    ]
                                },
                                {
                                    "type": "startsWith",
                                    "value": "Uncaught",
                                    "filters": [
                                        "toString"
                                    ]
                                }
                            ],
                            "onerror": "An error was thrown!"
                        }
                    ]
                }
            ],
            "points": 0,
            "coins": 0
        }
    ]
}